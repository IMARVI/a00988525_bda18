CREATE TABLE USUARIOS (
    ID INT NOT NULL GENERATED ALWAYS AS IDENTITY,
    NAME VARCHAR(50) NOT NULL,
    ADDRESS VARCHAR(100) NOT NULL,
    SYS_START TIMESTAMP(12) GENERATED ALWAYS AS ROW BEGIN NOT NULL,
    SYS_END TIMESTAMP(12) GENERATED ALWAYS AS ROW END NOT NULL,
    TRANS_START TIMESTAMP(12) GENERATED ALWAYS AS TRANSACTION START ID IMPLICITLY HIDDEN,
    PERIOD SYSTEM_TIME(SYS_START, SYS_END),
    PRIMARY KEY (ID)
);

CREATE TABLE USUARIOS_HYSTORY LIKE USUARIOS;
ALTER TABLE USUARIOS ADD VERSIONING USE HISTORY TABLE USUARIOS_HYSTORY;

CREATE TABLE SEGURO (
  ANO DATE NOT NULL ,
  MODELO VARCHAR(20) NOT NULL ,
  MARCA VARCHAR(20) NOT NULL ,
  PRECIO_FACTURA DECIMAL(8,2) NOT NULL ,
  NUM_MOTOR VARCHAR(30) NOT NULL ,
  NUM_SERIE VARCHAR(30) NOT NULL ,
  PLACA VARCHAR(10) NOT NULL,

  PRECIO_SEGURO DECIMAL(6,2) NOT NULL,
  COVERTURA INT NOT NULL,
  ESTATUS INT NOT NULL DEFAULT 1,
  cstart DATE NOT NULL,
  cend DATE NOT NULL,
  period business_time(cstart, cend),

  SYS_START TIMESTAMP(12) GENERATED ALWAYS AS ROW BEGIN NOT NULL,
  SYS_END TIMESTAMP(12) GENERATED ALWAYS AS ROW END NOT NULL,
  TRANS_START TIMESTAMP(12) GENERATED ALWAYS AS TRANSACTION START ID IMPLICITLY HIDDEN,
  PERIOD SYSTEM_TIME(SYS_START, SYS_END),
  PRIMARY KEY (PLACA, business_time WITHOUT overlaps)
);

CREATE TABLE SEGURO_HYSTORY LIKE SEGURO;
ALTER TABLE SEGURO ADD VERSIONING USE HISTORY TABLE SEGURO_HYSTORY;

INSERT INTO SEGURO (ANO, MODELO, MARCA, PRECIO_FACTURA, NUM_MOTOR, NUM_SERIE, PLACA, PRECIO_SEGURO, COVERTURA, cstart, cend)
VALUES ('2017-01-01', 'Fusion', 'Ford', 300000.00, '1q2w3e4r5t6y', '1q2w3e4r5t6y', '123asd', 10000, 1, '2017-01-01', '2018-01-01');


--Triggers
DROP TRIGGER Cancelacion;
CREATE TRIGGER Cancelacion
  AFTER UPDATE ON SEGURO REFERENCING
  NEW AS new_val
  OLD AS old_val
  FOR EACH ROW MODE DB2SQL
  WHEN (new_val.cstart != old_val.cstart OR new_val.cend != old_val.cend)
  BEGIN ATOMIC
    DECLARE precio_actualizado DECIMAL(6,2);
    DECLARE dias_totales DECIMAL(6,2);
    DECLARE dias_restantes DECIMAL(6,2)
    SET dias_totales = CAST(DAYS(old_val.cend) - DAYS(old_val.cstart));
    set dias_restantes = CAST((DAYS(new_val.cend) - DAYS(new_val.cstart));
    SET precio_actualizado = CAST(old_val.PRECIO_SEGURO * dias_restantes)/dias_totales) AS DECIMAL(10,2));
    UPDATE SEGURO SET PRECIO_SEGURO = precio_actualizado WHERE USER_ID=new_val.USER_ID AND CAR_PLATE=new_val.CAR_PLATE;
  END;

--En update no se puede disminuir las coverturas de poliza
CREATE TRIGGER covertura_nueva
  BEFORE UPDATE ON SEGURO REFERENCING
  NEW AS new_val
  OLD AS old_val
  FOR EACH ROW MODE DB2SQL
  WHEN (old_val.COVERTURA > new_val.COVERTURA)
  BEGIN ATOMIC
      SIGNAL SQLSTATE '75001' ('Invalid update: Solo se puede subir de covertura!');
END;