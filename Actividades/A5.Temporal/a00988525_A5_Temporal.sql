CREATE TABLE USUARIOS (
    ID INT NOT NULL GENERATED ALWAYS AS IDENTITY,
    NAME VARCHAR(50) NOT NULL,
    ADDRESS VARCHAR(100) NOT NULL,
    SYS_START TIMESTAMP(12) GENERATED ALWAYS AS ROW BEGIN NOT NULL,
    SYS_END TIMESTAMP(12) GENERATED ALWAYS AS ROW END NOT NULL,
    TRANS_START TIMESTAMP(12) GENERATED ALWAYS AS TRANSACTION START ID IMPLICITLY HIDDEN,
    PERIOD SYSTEM_TIME(SYS_START, SYS_END),
    PRIMARY KEY (ID)
);

CREATE TABLE USUARIOS_HYSTORY LIKE USUARIOS;
ALTER TABLE USUARIOS ADD VERSIONING USE HISTORY TABLE USUARIOS_HYSTORY;

CREATE TABLE SEGURO (
  ANO DATE NOT NULL ,
  MODELO VARCHAR(20) NOT NULL ,
  MARCA VARCHAR(20) NOT NULL ,
  PRECIO_FACTURA DECIMAL(8,2) NOT NULL ,
  NUM_MOTOR VARCHAR(30) NOT NULL ,
  NUM_SERIE VARCHAR(30) NOT NULL ,
  PLACA VARCHAR(10) NOT NULL,

  PRECIO_SEGURO DECIMAL(6,2) NOT NULL,
  COVERTURA INT NOT NULL,
  ESTATUS INT NOT NULL DEFAULT 1,
  cstart DATE NOT NULL,
  cend DATE NOT NULL,
  period business_time(cstart, cend),

  SYS_START TIMESTAMP(12) GENERATED ALWAYS AS ROW BEGIN NOT NULL,
  SYS_END TIMESTAMP(12) GENERATED ALWAYS AS ROW END NOT NULL,
  TRANS_START TIMESTAMP(12) GENERATED ALWAYS AS TRANSACTION START ID IMPLICITLY HIDDEN,
  PERIOD SYSTEM_TIME(SYS_START, SYS_END),
  PRIMARY KEY (PLACA, business_time WITHOUT overlaps)
);

CREATE TABLE SEGURO_HYSTORY LIKE SEGURO;
ALTER TABLE SEGURO ADD VERSIONING USE HISTORY TABLE SEGURO_HYSTORY;

INSERT INTO SEGURO (ANO, MODELO, MARCA, PRECIO_FACTURA, NUM_MOTOR, NUM_SERIE, PLACA, PRECIO_SEGURO, COVERTURA, cstart, cend)
VALUES ('2017-01-01', 'Fusion', 'Ford', 300000.00, '1q2w3e4r5t6y', '1q2w3e4r5t6y', '123asd', 10000, 1, '2017-01-01', '2018-01-01');

--Trigger
create trigger CANCELACION
  after update on SEGURO
  for each row mode db2sql
  WHEN (ESTATUS = 0 )
    begin atomic
      set meses_restantes =  MONTHS_BETWEEN(CURRENT_DATE, cstart);
      set costo_mes =  PRECIO_SEGURO/MONTHS_BETWEEN(cend,cstart);
      set PRECIO_SEGURO = costo_mes * meses_restantes;
    end;
--

select * from seguro;

--En update no se puede disminuir las coverturas de poliza
CREATE  INSURANCErestriction
BEFORE UPDATE OF  ON INSURANCE
REFERENCING OLD AS old_values NEW AS new_values
FOR EACH ROW mode DB2SQL
WHEN ( BETWEEN )
BEGIN
atomic
SIGNAL SQLSTATE '56001' ('No se puede incrementar mas del 30%');
END
